#!/bin/bash
# Variables
subj=sub-${1:4}
out_dir=$HOME/scratch/Zona/data/hcp1200_3T/hcp_test
njobs=$2
roi=$3 # ft, fl
localscratch=$SLURM_TMPDIR

SINGULARITY_IMG=$HOME/opt/singularity/mrtpipelines_0.1.6.sif
export SINGULARITYENV_OMP_NUM_THREADS=$njobs
export SINGULARITYENV_MKL_NUM_THREADS=$njobs

# Create subject directories on local scratch 
mkdir -p $localscratch/$subj/tractography/masked

# Untar 
echo "Untarring subject subcortical connectivity"
tar -xf $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/${subj}_masked.tar -C $localscratch/$subj/tractography --wildcards *$roi*

# Create new matrices 
cat $localscratch/$subj/tractography/masked/*/$roi/*${roi}*.csv >> $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-${roi}_subcortical_tractography_tckweights.txt 

mkdir -p $localscratch/$subj/tractography/masked/combined/$roi

for hemi in L R; do
  singularity exec $SINGULARITY_IMG tckedit $localscratch/$subj/tractography/masked/$hemi/$roi/*.tck $localscratch/$subj/tractography/masked/combined/${subj}_space-dwi_hemi-${hemi}_desc-${roi}.tck 
done
singularity exec $SINGULARITY_IMG tckedit $localscratch/$subj/tractography/masked/combined/*.tck $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-${roi}_subcortical_tractography.tck 

singularity exec $SINGULARITY_IMG tck2connectome -nthreads $njobs -zero_diagonal -stat_edge sum -assignment_radial_search 1.5 -tck_weights_in $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-${roi}_subcortical_tractography_tckweights.txt -out_assignments $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-subcortical_nodeassignment.txt -symmetric $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-${roi}_subcortical_tractography.tck $out_dir/derivatives/zona_bb_subcortex/$subj/anat/${subj}_space-T1w_desc-ZonaBBSubCorSeg.nii.gz $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-${roi}_subcortical_nodeweights.csv

# Create TDI maps
mkdir -p $localscratch/$subj/tdi 
for hemi in L R; do 
    for node1 in `seq 1 72`; do
        for node2 in `seq $((node1 + 1)) 72`; do
            # Create TDI image 
            singularity exec $SINGULARITY_IMG tckmap -nthreads $njobs -template $out_dir/$subj/anat/${subj}_acq-procHCP_T1w.nii.gz -tck_weights_in $localscratch/$subj/tractography/masked/$hemi/$roi/${subj}_space-dwi_hemi-${hemi}_desc-${roi}_tckweights${node1}-${node2}.csv -contrast tdi $localscratch/$subj/tractography/masked/$hemi/$roi/${subj}_space-dwi_hemi-${hemi}_desc-${roi}_${node1}-${node2}.tck $localscratch/$subj/tdi/${subj}_space-dwi_hemi-${hemi}_desc-${roi}_tdi${node1}-${node2}.nii.gz
        done
    done
done

echo "Cleaning up & syncing files..."
pushd `pwd`

cd $localscratch/$subj/tdi
# Check if a tar file already exists
if [[ -f $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tdi/${subj}_masked_tdi.tar ]]
then
  cp -v $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/${subj}_masked_tdi.tar .
  tar -rf ${subj}_masked_tdi.tar *.nii.gz 
else
  tar -cf ${subj}_masked_tdi.tar *.nii.gz
fi 

# Save nodeweights file
if [[ -f $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/${subj}_masked.tar ]]
then
  tar -rf $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/${subj}_masked.tar *${roi}*subcortical_nodeweights.csv
fi
popd 

rsync -v $localscratch/$subj/tdi/${subj}_masked_tdi.tar $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tdi/

if [[ ! -d $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/masked ]] 
then
  mkdir -p $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/masked ]] 
fi 

rsync -v $localscratch/$subj/tractography/masked/${subj}_space-dwi_desc-${roi}_subcortical_nodeweights.csv $out_dir/derivatives/mrtpipelines_0.1.6/mrtpipelines/$subj/tractography/