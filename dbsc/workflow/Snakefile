# ---- begin snakebids boilerplate ----------------------------------------------

import snakebids
from snakebids import bids


configfile: "config/snakebids.yml"


# writes inputs_config.yml and updates config dict
config.update(
    snakebids.generate_inputs(
        bids_dir=config["bids_dir"],
        pybids_inputs=config["pybids_inputs"],
        derivatives=config["derivatives"],
        participant_label=config["participant_label"],
        exclude_participant_label=config["exclude_participant_label"],
        use_bids_inputs=False,
    )
)


# this adds constraints to the bids naming
wildcard_constraints:
    **snakebids.get_wildcard_constraints(config["pybids_inputs"]),


# ---- end snakebids boilerplate ------------------------------------------------

from pathlib import Path
from functools import partial

# Function to to check if additional directories are absolute paths
def check_dir_path(
    config_key: str,
    test_path: str,
    out_dirname: str = None,
) -> str:
    """INPUTS
    config_key - key in config dict to check
    test_path - path to directory for testing purposes
    out_dirname - directory name in output, relative to output_dir if no user input
    """
    extra_dir = config.get(config_key)
    if extra_dir:
        extra_dir = str(Path(extra_dir))
        # Check if testing directory
        if extra_dir == test_path:
            extra_dir = str(Path(workflow.basedir).parents[1] / extra_dir)
        # Ensure all other paths are absolute
        elif not Path(extra_dir).is_absolute():
            raise ValueError(
                f"Please pass --{config_key} as an absolute path."
            )

        return extra_dir

    return (
        str(Path(config["output_dir"]) / out_dirname) if out_dirname else None
    )


# Rules
include: "rules/freesurfer.smk"
include: "rules/zona_bb_subcortex.smk"
include: "rules/mrtpipelines.smk"


rule all:
    input:
        expand(
            rules.filtered_tck2connectome.output.sl_assignment,
            subject=config["input_lists"]["dwi"]["subject"],
        ),
