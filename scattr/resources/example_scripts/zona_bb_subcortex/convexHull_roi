#!/bin/env python
def get_parser():
    """
    Argument parser
    """
    from argparse import ArgumentParser, RawTextHelpFormatter

    parser = ArgumentParser(description="Convex hull of nifti",
                            formatter_class=RawTextHelpFormatter)

    # Required args
    g_req = parser.add_argument_group("Required arguments")
    g_req.add_argument("subj", action="store",
                       help="Subject ID")
    g_req.add_argument("in_dir", action="store",
                       help="Path to parent input directory (BIDS) containing binary image to create convex hull")

    return parser

def main():
    """
    Entry point of code
    """
    import os

    import nibabel as nib
    import numpy as np
    import scipy.spatial

    args = get_parser().parse_args()

    # Data paths
    in_file = f"{os.path.realpath(args.in_dir)}/{args.subj}/anat/{args.subj}_space-T1w_desc-ZonaBBSubCorSeg_bin.nii.gz"
    out_file = f"{os.path.realpath(args.in_dir)}/{args.subj}/anat/{args.subj}_space-T1w_desc-ZonaBBSegHull_bin.nii.gz"

    # Load input
    print("Loading data...")
    in_img = nib.load(in_file)
    in_affine = in_img.affine
    in_data = in_img.get_fdata()

    # Compute convex hull
    print("Computing convex hull...")
    points = np.transpose(np.where(in_data))
    hull = scipy.spatial.ConvexHull(points)
    deln = scipy.spatial.Delaunay(points[hull.vertices])
    idx = np.stack(np.indices(in_data.shape), axis=-1)
    out_idx = np.nonzero(deln.find_simplex(idx) + 1)
    out_img = np.ones(in_data.shape)
    out_img[out_idx] = 0

    # Save convex hull
    print("Saving convex hull...")
    out_hull = nib.Nifti1Image(out_img, in_affine)
    nib.save(out_hull, out_file)


if __name__ == "__main__":
    main()
