---
name: Lint workflow

on:
  push:
    branches:
      - '*'
      - '!push-action/*'
  pull_request:
    branches:
      - '*'
      - '!push-action/*'

jobs:
  quality:
    name: Lint code
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: Setup Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.10
          restore-keys: ${{ runner.os }}-pip-3.10

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.0
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-3.10

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev

      - name: yamlfix
        run: poetry run poe yamlfix

      - name: isort
        run: poetry run poe isort

      - name: black
        run: poetry run poe black

      - name: flake8
        run: poetry run poe flake8

      - name: snakefmt
        run: poetry run poe snakefmt
